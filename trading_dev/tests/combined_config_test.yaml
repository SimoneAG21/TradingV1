# Main test configuration file for TradingV1, used by ConfigManager.
# Defines settings, processes, and menu for testing all features in
# test_config_manager.py. Loaded by app.py, telegram_fetch.py, and Heroku
# (seanstrader) during development and testing.

# Usage:
#   from helper.config_manager import ConfigManager
#   config = ConfigManager('tests/combined_config_test.yaml')
#   log_dir = config.get('logging', 'log_dir_name')  # Returns 'logs'
#   processes = config.get_section('processes')      # Returns process list

# Features:
# - Logging: Defines log directory and levels (e.g., log_dir_name: logs).
# - Constants: Sets app-wide settings (e.g., max_retries: 2).
# - Menu: Hierarchical UI navigation (Main.Trading.Start).
# - Templates: Reusable process settings (default_process).
# - Processes: Task definitions with attributes, conditions, SQL.
# - Includes: External file (processes.yaml) for additional processes.

logging:
  # Logging settings for application logs
  log_dir_name:
    value: logs
    type: string
  log_file_max_bytes:
    value: 5000
    type: integer
  log_gen_level:
    value: INFO
    type: string
    
database:
  type: sqlite
  path: :memory

constants:
  # Application constants for runtime behavior
  max_retries:
    value: 2
    type: integer
  is_test_mode:
    value: true
    type: boolean

menu:
  # UI navigation structure for Flask app
  Main:
    Trading:
      help: Test trading menu
      Start:
        help: Start test trade
        params:
          amount:
            default: 50.0
            type: float
    Settings:
      help: Test settings
    Exit:
      help: Exit test

templates:
  # Reusable process templates
  default_process:
    interval:
      value: 60
      type: integer
    enabled:
      value: true
      type: boolean

processes:
  # Process definitions for tasks (e.g., Telegram fetching)
  - id: fetch
    interval:
      value: 60
      type: integer
    enabled:
      value: true
      type: boolean
  - template: default_process
    priority:
      value: high
      type: string
  - conditions:
      # Environment-specific settings (test/prod)
      test:
        interval:
          value: 30
          type: integer
        mode:
          value: debug
          type: string
      prod:
        interval:
          value: 300
          type: integer
        mode:
          value: optimized
          type: string
  - interval:
      value: 120
      type: integer
    sql:
      # Embedded SQL query for database tasks
      fetch_messages: |
        SELECT * FROM telegram_messages WHERE timestamp > NOW() - INTERVAL '1 hour';

includes:
  # External process file for modularity
  - tests/processes.yaml